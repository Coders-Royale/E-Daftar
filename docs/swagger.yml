openapi: 3.0.0
info:
  description: |
    SIH Backend Server Documentation
  version: "1.0.0"
  title: SIH-Backend
  contact:
    email: raghhavdturki@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - description: Development Server
    url: http://localhost:7071/api/
  - description: Production Server
    url: https://sih-2022-server.azurewebsites.net/api/
  - description: Chat Server
    url: https://sih-email.herokuapp.com/api/chat
paths:
  /createAdmin:
    post: 
      tags:
        - admin
      summary: Create Admin Account
      operationId: createAdmin
      requestBody:
        $ref: '#/components/requestBodies/CreateAdminInput'
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: Admin Created Successfully
  /createEmployee:
    post: 
      tags:
        - admin
      security: 
        - bearerAuth: []
      summary: Create Employee Account
      operationId: createEmployee
      requestBody:
        $ref: '#/components/requestBodies/CreateEmployeeInput'
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: Employee Created Successfully
  /createHOD:
    post: 
      tags:
        - admin
      security: 
        - bearerAuth: []
      summary: Create HOD Account
      operationId: createHOD
      requestBody:
        $ref: '#/components/requestBodies/CreateEmployeeInput'
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: HOD Created Successfully
  /login:
    post:
      tags: 
        - login
      summary: Login
      operationId: login
      requestBody:
        $ref: '#/components/requestBodies/LoginInput'
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: Logged In Successfully!
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/LoginResponse'
  /uploadFile:
    post:
      tags:
        - employee
      security: 
        - bearerAuth: []
      summary: Upload File
      operationId: uploadFile
      parameters: 
        - in: query
          name: filename
          description: filename
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                    type: string
                    format: binary
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: File Uploaded Successfully
          content:
            application/json:
              schema:
                properties:
                  url:
                    type: string
  /createDocument:
    post:
      tags:
        - employee
      security: 
        - bearerAuth: []
      summary: Create Document
      operationId: createDocument
      requestBody:
        $ref: '#/components/requestBodies/CreateDocumentInput'
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: Document Created Successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDocumentResponse'
  /rooms:
    get:
      tags:
        - chat
      security:
       - bearerAuth: []
      summary: Fetch all the rooms the employee is a part of
      operationId: rooms
      parameters: 
        - in: query
          name: employeeId
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: Rooms fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoomsResponse'
  /messages:
    get:
      tags:
        - chat
      security:
        - bearerAuth: []
      summary: Fetch all the messages in a room
      operationId: messages
      parameters: 
        - in: query
          name: roomId
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: Messages fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessagesResponse'
  /assignDocument:
    post:
      tags:
        - employee
      security:
        - bearerAuth: []
      summary: Assign a document to an employee in your department
      operationId: assignDocument
      requestBody:
        $ref: '#/components/requestBodies/AssignDocumentInput'
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: Document assigned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignDocumentResponse'
  /forwardToAdmin:
    post:
      tags:
        - employee
      security:
        - bearerAuth: []
      summary: Forward a document to an admin
      operationId: forwardToAdmin
      requestBody:
        $ref: '#/components/requestBodies/ForwardToAdminInput'
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: Document forwarded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignDocumentResponse'
  /rejectDocument:
    post:
      tags:
        - employee
      security:
        - bearerAuth: []
      summary: Reject a document
      operationId: rejectDocument
      requestBody:
        $ref: '#/components/requestBodies/RejectDocumentInput'
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: Document rejected successfully
  /conversation:
    get:
      tags:
        - chat
      security:
        - bearerAuth: []
      summary: Fetch a conversation from a documentId
      operationId: conversation
      parameters: 
        - in: query
          name: documentId
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: Conversation fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversation'
  /trackStatus:
    get:
      tags:
        - employee
      security:
        - bearerAuth: []
      summary: Track the status of a document
      operationId: trackStatus
      parameters: 
        - in: query
          name: documentId
          schema:
            type: string
          required: true
        - in: query
          name: employeeId
          schema:
            type: string
          required: true
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: Status tracked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackStatusResponse'
  /getEmployee:
    get:
      tags:
        - employee
        - hod
        - admin
      security:
        - bearerAuth: []
      summary: Get all employees from a department or get a specific employee(use either the employeeId or documentId, not both)
      operationId: getEmployee
      parameters: 
        - in: query
          name: departmentId
          schema:
            type: string
        - in: query
          name: employeeId
          schema:
            type: string
      responses:
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
        '200':
          description: Employees fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
components:
  schemas:
    Employee:
      type: object
      properties:
        name: 
          type: string
        employeeId: 
          type: string
        email: 
          type: string
        personalEmail: 
          type: string
        contactNo: 
          type: string
        gender: 
          type: string
        dob: 
          type: string
          format: date-time
        addr_line1: 
          type: string
        addr_line2: 
          type: string
        city: 
          type: string
        state: 
          type: string
        country: 
          type: string
          default: India
        office_branch: 
          type: string
        password: 
          type: string
        role: 
          type: string
          default: employee
        department: 
          type: string
        resetPasswordToken: 
          type: string
          default: null
        resetPasswordExpires: 
          type: string
          format: date-time
        profile:
          type: object
          properties:
            name: 
              type: string
            employeeId: 
              type: string
            email: 
              type: string
            contactNo: 
              type: string
            gender: 
              type: string
            dob: 
              type: string
              format: date-time
            addr_line1: 
              type: string
            addr_line2: 
              type: string
            city: 
              type: string
            state: 
              type: string
            country: 
              type: string
              default: India
            office_branch: 
              type: string
            role: 
              type: string
              default: employee
            department: 
              type: string
    Admin:
      type: object
      properties:
        name: 
          type: string
        employeeId: 
          type: string
        email: 
          type: string
        personal_email: 
          type: string
        contactNo: 
          type: string
        gender: 
          type: string
        dob: 
          type: string
          format: date-time
        addr_line1: 
          type: string
        addr_line2: 
          type: string
        city: 
          type: string
        state: 
          type: string
        country: 
          type: string
          default: India
        office_branch: 
          type: string
        password: 
          type: string
        role: 
          type: string
          default: admin
        department: 
          type: string
        resetPasswordToken: 
          type: string
        resetPasswordExpires: 
          type: string
          format: date-time
        profile:
          type: object
          properties:
            name: 
              type: string
            employeeId: 
              type: string
            email: 
              type: string
            contactNo: 
              type: string
            gender: 
              type: string
            dob: 
              type: string
              format: date-time
            addr_line1: 
              type: string
            addr_line2: 
              type: string
            city: 
              type: string
            state: 
              type: string
            country: 
              type: string
              default: India
            office_branch: 
              type: string
            role: 
              type: string
              default: admin
            department: 
              type: string
    Conversation:
      type: object
      properties:
        conversationName:
          type: string
        documentId:
          type: string
        participants:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              info:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
    Message:
      type: object
      properties:
        senderId:
          type: string
        subject:
          type: string
        content:
          type: string
        conversationId:
          type: string
        senderName: 
          type: string
    Document:
      type: object
      properties:
        documentId: 
          type: string
        subject: 
          type: string
        description: 
          type: string
        employeeId: 
          type: string
        main_file: 
          type: array
          items:
            type: string
        reference_files: 
          type: array
          items:
            type: string
        permissions: 
          type: array
          items:
            type: string  
        status: 
          type: array
          items:
            type: string
        time_recieved: 
          type: array
          items:
            type: string
            format: date-time
        time_returned: 
          type: array
          items:
            type: string
            format: date-time
        rejection_reason: 
          type: string
        category: 
          type: string

    CreateAdminInput:
      type: object
      properties:
        name: 
          type: string
        personal_email: 
          type: string
        contactNo: 
          type: string
        gender: 
          type: string
        dob: 
          type: string
          format: date-time
        addr_line1: 
          type: string
        addr_line2: 
          type: string
        city: 
          type: string
        state: 
          type: string
        office_branch: 
          type: string
        role: 
          type: string
        department: 
          type: string
    CreateEmployeeInput:
      type: object
      properties:
        name: 
          type: string
        personal_email: 
          type: string
        contactNo: 
          type: string
        gender: 
          type: string
        dob: 
          type: string
          format: date-time
        addr_line1: 
          type: string
        addr_line2: 
          type: string
        city: 
          type: string
        state: 
          type: string
        office_branch: 
          type: string
        role: 
          type: string
        department: 
          type: string
    LoginInput:
      type: object
      properties:
        employeeId:
          type: string
        password:
          type: string
        role: 
          type: string
          enum:
            - admin
            - employee
            - hod
    CreateDocumentInput:
      type: object
      properties:
        employeeId: 
          type: string
        employee_name: 
          type: string
        subject: 
          type: string
        description: 
          type: string
        main_file: 
          type: array
          items:
            type: string
        reference_file:
          type: array
          items:
            type: string
        forwarding_dept: 
          type: string
        category: 
          type: string
    AssignDocumentInput:
      type: object
      properties:
        adminId: 
          type: string
        department: 
          type: string
        documentId: 
          type: string
        employeeToAssign: 
          type: string
    ForwardToAdminInput:
      type: object
      properties:
        employeeId: 
          type: string
        department: 
          type: string  
        documentId: 
          type: string
    RejectDocumentInput:
      type: object
      properties:
        employeeId: 
          type: string
        documentId: 
          type: string
        reason: 
          type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
        profile:
          type: object
    CreateDocumentResponse:
      type: object
      properties: 
        documentId: 
          type: string
        employeeId: 
          type: string
        roomId: 
          type: string
    GetRoomsResponse:
      type: array
      items:
        $ref: "#/components/schemas/Conversation"
    GetMessagesResponse:
      type: array
      items:
        $ref: "#/components/schemas/Message"
    AssignDocumentResponse:
      type: object
      properties:
        employeeAssignedId:
          type: string
        employeeAssignedName:
          type: string
    TrackStatusResponse:
      type: array
      items:
        properties:
          employeeName: 
            type: string
          employeeId: 
            type: string
          employeeDepartment: 
            type: string
          time_elapsed: 
            type: integer
            format: int32
          status:
            type: string
          time_recieved:
            type: string
            format: date-time
          time_returned:
            type: string
            format: date-time
          rejection_reason:
            type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: Iron Sealed Token
  requestBodies:
    CreateAdminInput:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAdminInput'
        application/xml:
          schema:
            $ref: '#/components/schemas/CreateAdminInput'
      required: true
    CreateEmployeeInput:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateEmployeeInput'
        application/xml:
          schema:
            $ref: '#/components/schemas/CreateEmployeeInput'
      required: true
    LoginInput:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LoginInput'
        application/xml:
          schema:
            $ref: '#/components/schemas/LoginInput'
      required: true
    CreateDocumentInput:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateDocumentInput'
        application/xml:
          schema:
            $ref: '#/components/schemas/CreateDocumentInput'
      required: true
    AssignDocumentInput:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AssignDocumentInput'
        application/xml:
          schema:
            $ref: '#/components/schemas/AssignDocumentInput'
      required: true
    ForwardToAdminInput:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForwardToAdminInput'
        application/xml:
          schema:
            $ref: '#/components/schemas/ForwardToAdminInput'
      required: true
    RejectDocumentInput:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RejectDocumentInput'
        application/xml:
          schema:
            $ref: '#/components/schemas/RejectDocumentInput'
      required: true